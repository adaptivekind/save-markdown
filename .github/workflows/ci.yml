name: CI

on:
  push:

# Permissions needed for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm run test:ci

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('@playwright/test/package.json').version)")" >> $GITHUB_OUTPUT

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Create test directories
        run: |
          mkdir -p ./target/e2e-downloads
          mkdir -p ./test-results
          mkdir -p ./reports

      - name: Run e2e tests
        run: npm run test:e2e

      - name: Run cucumber e2e tests
        run: npm run test:cucumber:report

      - name: Check test results
        if: always()
        run: |
          if [ -f "test-results/junit.xml" ]; then
            echo "Test results file exists"
            cat test-results/junit.xml
          else
            echo "No test results file found"
          fi

      - name: Check cucumber reports
        if: always()
        run: |
          if [ -f "reports/cucumber_report.html" ]; then
            echo "✅ Cucumber HTML report generated"
            ls -la reports/
          else
            echo "❌ Cucumber HTML report not found"
          fi
          if [ -f "reports/cucumber_report.json" ]; then
            echo "✅ Cucumber JSON report generated"
          else
            echo "❌ Cucumber JSON report not found"
          fi

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-test-results
          path: test-results/
          retention-days: 30

      - name: Upload cucumber reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cucumber-reports
          path: reports/
          retention-days: 30

      - name: Create GitHub Pages site structure
        if: always()
        run: |
          mkdir -p gh-pages
          cp -r reports/* gh-pages/ 2>/dev/null || true

          # Copy and customize the HTML template
          cp .github/templates/reports-index.html gh-pages/index.html

          # Replace placeholders with actual values
          sed -i.bak "s/{{GITHUB_SHA}}/$GITHUB_SHA/g" gh-pages/index.html

      # - name: Deploy to GitHub Pages
      #   if: always() && github.ref == 'refs/heads/main'
      #   uses: peaceiris/actions-gh-pages@v4
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./gh-pages
      #     destination_dir: reports
      #     keep_files: false
